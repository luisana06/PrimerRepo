# -*- coding: utf-8 -*-
"""analisis_vinos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N2yf_yuaykCZv7VOBhUcJ9fIUUIcGT3k
"""

# 1. Carga del archivo:
ruta = '/content/winemag-data-130k-v2.csv'
import pandas as pd
df = pd.read_csv(ruta)

# 2. Selección y depuración de datos

# Cambiar nombre de la primera columna
df.rename(columns={'Unnamed: 0': 'id'}, inplace=True)

# Verificar si hay datos faltantes
print(df.isnull().sum()) # Se suman los datos faltantes de cada columna

# Calcular el porcentaje de valores faltantes por columna
porcentaje_faltantes = (df.isnull().sum() / len(df)) * 100
print(porcentaje_faltantes)

# Eliminar filas con registros vacíos en 'country' y 'variety'
df_limpio1 = df.dropna(subset=['country'])
df_limpio2 = df_limpio1.dropna(subset=['variety'])
print(df_limpio2[['country','variety']].isnull().sum()) # Verificar

# Imputar valores faltantes en la columna 'price' con el precio promedio de cada país
df_limpio3 = df_limpio2.copy()
df_limpio3['price'] = df_limpio2['price'].fillna(df_limpio2.groupby('country')['price'].transform('mean'))
print(df_limpio3['price'].isnull().sum()) # Verificar si queda algún dato faltante

# Ver el registro con el dato faltante
df_limpio3[df_limpio3['price'].isnull()]

# Se elimina
df_limpio4 = df_limpio3.dropna(subset=['price'])
print(df_limpio4['price'].isnull().sum()) # Verificar

# Rellenar los registros vacíos de 'designation', 'region_1', 'region_2', 'taster_name' y 'taster_twitter_handle' con 'Unknown' (desconocido)
df_limpio5 = df_limpio4.copy()
df_limpio5['designation'] = df_limpio5['designation'].fillna('Unknown')
df_limpio5['region_1'] = df_limpio5['region_1'].fillna('Unknown')
df_limpio5['region_2'] = df_limpio5['region_2'].fillna('Unknown')
df_limpio5['taster_name'] = df_limpio5['taster_name'].fillna('Unknown')
df_limpio5['taster_twitter_handle'] = df_limpio5['taster_twitter_handle'].fillna('Unknown')

# Verificar si quedaron datos faltantes
print(df_limpio5.isnull().sum())

# Crear categorías de precios: baja (de 0 a 100), media (de 100 a 500), alta (de 500 a 1000) y premium (de 1000 al valor más alto de la columna)
# Esta columna servirá para los análisis posteriores
df1 = df_limpio5.copy()
df1['price_category'] = pd.cut(df['price'], bins=[0, 100, 500, 1000, df['price'].max()], labels=['low', 'medium', 'high', 'premium'])

# Mostrar los primeros registros del dataframe
df1.head()

# 3. Creación de gráficos para análisis

import plotly.express as px

# Frecuencia de precios por categoría
fig = px.histogram(df1, x='price_category', color='price_category', text_auto=True, title='Distribución de precios según su categoría')
fig.update_layout(xaxis_title='Categoría de precio', yaxis_title='Frecuencia')
fig.show()

# Frecuencia de precios -- Hacer zoom para ver con más detalle -- Seleccionar o deseleccionar categoría de precio
fig = px.histogram(df1, x='price', color='price_category', title='Distribución de precios (categorizados por color)')
fig.update_layout(xaxis_title='Precio', yaxis_title='Frecuencia')
fig.show()

# Frecuencia de puntuaciones -- Hacer zoom para ver con más detalle -- Seleccionar o deseleccionar categoría de precio
fig = px.histogram(df1, x='points', color='price_category', text_auto=True, title='Distribución de puntuaciones')
fig.update_layout(xaxis_title='Puntuación', yaxis_title='Frecuencia')
fig.show()

# Distribución del puntaje según el precio
fig = px.scatter(df1, x='price', y='points', color='price_category', title='Relación entre puntaje y precio')
fig.update_layout(xaxis_title='Precio', yaxis_title='Puntuación')
fig.show()

# Frecuencia de países
fig = px.histogram(df1, x='country', text_auto=True, title='Distribución de países')
fig.update_layout(xaxis_title='País', yaxis_title='Frecuencia')
fig.show()

# Distribución del puntaje por país (promedio)
fig = px.bar(df1.groupby('country')['points'].mean().sort_values(ascending=False), title='Distribución del puntaje por país (promedio)')
fig.update_layout(xaxis_title='País', yaxis_title='Puntuación promedio')
fig.show()

# Boxplot del puntaje por país
fig = px.box(df1, x='country', y='points', title='Distribución del puntaje por país (diagrama de caja)')
fig.update_layout(xaxis_title='País', yaxis_title='Puntuación')
fig.show()

# Distribución del precio por país (promedio)
fig = px.bar(df1.groupby('country')['price'].mean().sort_values(ascending=False), title='Distribución del precio por país (promedio)')
fig.update_layout(xaxis_title='País', yaxis_title='Precio promedio')
fig.show()

# Boxplot del precio por país -- Hacer zoom para ver con más detalle
fig = px.box(df1, x='country', y='price', title='Distribución del precio por país (diagrama de caja)')
fig.update_layout(xaxis_title='País', yaxis_title='Precio')
fig.show()

# Frecuencia de la variedad de uva -- Hacer zoom para ver con más detalle -- Seleccionar o deseleccionar categoría de precio
fig = px.histogram(df1, x='variety', color='price_category', title='Distribución de variedades de uva')
fig.update_layout(xaxis_title='Variedad de uva', yaxis_title='Frecuencia')
fig.show()

# Distribución del puntaje según la variedad de uva (promedio) -- Hacer zoom para ver con más detalle
fig = px.bar(df1.groupby('variety')['points'].mean().sort_values(ascending=False), title='Distribución del puntaje según la variedad de uva (promedio)')
fig.update_layout(xaxis_title='Variedad', yaxis_title='Puntaje promedio')
fig.show()

# Boxplot del puntaje por variedad de uva -- Hacer zoom para ver con más detalle
fig = px.box(df1, x='variety', y='points', title='Distribución del puntaje por variedad de uva (diagrama de caja)')
fig.update_layout(xaxis_title='Variedad de uva', yaxis_title='Puntuación')
fig.show()

# Distribución del precio según la variedad de uva (promedio) -- Hacer zoom para ver con más detalle
fig = px.bar(df1.groupby('variety')['price'].mean().sort_values(ascending=False), title='Distribución del precio según la variedad de uva (promedio)')
fig.update_layout(xaxis_title='Variedad', yaxis_title='Precio promedio')
fig.show()

# Boxplot del precio por variedad de uva
fig = px.box(df1, x='variety', y='price', title='Distribución del precio por variedad de uva (diagrama de caja)')
fig.update_layout(xaxis_title='Variedad de uva', yaxis_title='Precio')
fig.show()

# Distribución de la variedad de uva por país -- Hacer zoom para ver con más detalle
fig = px.histogram(df1, x='country', color='variety', title='Distribución de variedades de uva por país (separados por color)')
fig.update_layout(xaxis_title='País', yaxis_title='Frecuencia')
fig.show()

# Distribución de las variedades de uva en cada una de las provincias de USA
fig= px.histogram(df1[df1['country'] == 'US'], x='province', color='variety', title='Distribución de variedades de uva por provincia de USA (separados por color)')
fig.update_layout(xaxis_title='Provincia', yaxis_title='Frecuencia')
fig.show()

# Distribución de las variedades de uva en las regiones de California, USA -- Hacer zoom para ver con más detalle
fig= px.histogram(df1[df1['province'] == 'California'], x='region_1', color='variety', title='Distribución de variedades de uva en las regiones de California, USA (separados por color)')
fig.update_layout(xaxis_title='Provincia', yaxis_title='Frecuencia')
fig.show()